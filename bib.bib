
@article{engelfrietMSODefinableString2001,
  title = {{{MSO Definable String Transductions}} and {{Two}}-Way {{Finite}}-State {{Transducers}}},
  volume = {2},
  issn = {1529-3785},
  abstract = {We extend a classic result of B{\"u}chi, Elgot, and Trakhtenbrot: MSO definable string transductions i.e., string-to-string functions that are definable by an interpretation using monadic second-order (MSO) logic, are exactly those realized by deterministic two-way finite-state transducers, i.e., finite-state automata with a two-way input tape and a one-way output tape. Consequently, the equivalence of two mso definable string transductions is decidable. In the nondeterministic case however, MSO definable string tranductions, i.e., binary relations on strings that are mso definable by an interpretation with parameters, are incomparable to those realized by nondeterministic two-way finite-state transducers. This is a motivation to look for another machine model, and we show that both classes of MSO definable string transductions are characterized in terms of Hennie machines, i.e., two-way finite-state transducers that are allowed to rewrite their input tape, but may visit each position of their input only a bounded number of times.},
  number = {2},
  journal = {ACM Trans. Comput. Logic},
  doi = {10.1145/371316.371512},
  author = {Engelfriet, Joost and Hoogeboom, Hendrik Jan},
  month = apr,
  year = {2001},
  keywords = {Büchi,Elgot,Hennie machine,interpretation,monadic second-order logic,string transductions,Trakhtenbrot,two-way finite-state transducers},
  pages = {216--254},
  file = {/Users/bojan/Zotero/storage/9F5XIV6F/Engelfriet and Hoogeboom - 2001 - MSO Definable String Transductions and Two-way Fin.pdf}
}




@inproceedings{alurStreamingStringTransducers2011,
  series = {Lecture {{Notes}} in {{Computer Science}}},
  title = {Streaming {{String Transducers}}},
  volume = {6642},
  isbn = {978-3-642-20919-2},
  booktitle = {Logic, {{Language}}, {{Information}} and {{Computation}} - 18th {{International Workshop}}, {{WoLLIC}} 2011, {{Philadelphia}}, {{PA}}, {{USA}}, {{May}} 18-20, 2011. {{Proceedings}}},
  publisher = {{Springer}},
  doi = {10.1007/978-3-642-20920-8_1},
  author = {Alur, Rajeev},
  editor = {Beklemishev, Lev D. and de Queiroz, Ruy J. G. B.},
  year = {2011},
  pages = {1},
  file = {/Users/bojan/Zotero/storage/XBHFEQXF/Alur - 2011 - Streaming String Transducers.pdf}
}



@book{sorensen_lectures_2006,
	title = {Lectures on the {Curry}-{Howard} {Isomorphism}},
	isbn = {978-0-08-047892-0},
	abstract = {The Curry-Howard isomorphism states an amazing correspondence between systems of formal logic as encountered in proof theory and computational calculi as found in type theory. For instance,minimal propositional logic corresponds to simply typed lambda-calculus, first-order logic corresponds to dependent types, second-order logic corresponds to polymorphic types, sequent calculus is related to explicit substitution, etc.The isomorphism has many aspects, even at the syntactic level:formulas correspond to types, proofs correspond to terms, provability corresponds to inhabitation, proof normalization corresponds to term reduction, etc.But there is more to the isomorphism than this. For instance, it is an old idea---due to Brouwer, Kolmogorov, and Heyting---that a constructive proof of an implication is a procedure that transformsproofs of the antecedent into proofs of the succedent; the Curry-Howard isomorphism gives syntactic representations of such procedures. The Curry-Howard isomorphism also provides theoretical foundations for many modern proof-assistant systems (e.g. Coq).This book give an introduction to parts of proof theory and related aspects of type theory relevant for the Curry-Howard isomorphism. It can serve as an introduction to any or both of typed lambda-calculus and intuitionistic logic.Key features - The Curry-Howard Isomorphism treated as common theme - Reader-friendly introduction to two complementary subjects: Lambda-calculus and constructive logics - Thorough study of the connection between calculi and logics - Elaborate study of classical logics and control operators - Account of dialogue games for classical and intuitionistic logic - Theoretical foundations of computer-assisted reasoning· The Curry-Howard Isomorphism treated as the common theme.· Reader-friendly introduction to two complementary subjects: lambda-calculus and constructive logics · Thorough study of the connection between calculi and logics.· Elaborate study of classical logics and control operators.· Account of dialogue games for classical and intuitionistic logic.· Theoretical foundations of computer-assisted reasoning},
	language = {en},
	publisher = {Elsevier},
	author = {Sørensen, Morten Heine and Urzyczyn, Pawel},
	month = jul,
	year = {2006},
	keywords = {Mathematics / Logic}
}

@article{engelfriet_macro_2003,
	title = {Macro {Tree} {Translations} of {Linear} {Size} {Increase} are {MSO} {Definable}},
	volume = {32},
	issn = {0097-5397},
	url = {https://epubs.siam.org/doi/abs/10.1137/S0097539701394511},
	doi = {10.1137/S0097539701394511},
	abstract = {The first main result is that if a macro tree translation is of linear size increase, i.e., if the size of every output tree is linearly bounded by the size of the corresponding input tree, then the translation is MSO definable (i.e., definable in monadic second-order logic). This gives a new characterization of the MSO definable tree translations in terms of macro tree transducers: they are exactly the macro tree translations of linear size increase. The second main result is that given a macro tree transducer, it can be decided whether or not its translation is MSO definable, and if it is, then an equivalent MSO transducer can be constructed. Similar results hold for attribute grammars, which define a subclass of the macro tree translations.},
	number = {4},
	urldate = {2019-06-11},
	journal = {SIAM Journal on Computing},
	author = {Engelfriet, J. and Maneth, S.},
	month = jan,
	year = {2003},
	pages = {950--1006}
}

@article{bloem_comparison_2000,
	title = {A {Comparison} of {Tree} {Transductions} {Defined} by {Monadic} {Second} {Order} {Logic} and by {Attribute} {Grammars}},
	volume = {61},
	issn = {0022-0000},
	url = {http://www.sciencedirect.com/science/article/pii/S0022000099916847},
	doi = {10.1006/jcss.1999.1684},
	abstract = {Two well-known formalisms for the specification and computation of tree transductions are compared: the mso graph transducer and the attributed tree transducer with look-ahead, respectively. The mso graph transducer, restricted to trees, uses monadic second order logic to define the output tree in terms of the input tree. The attributed tree transducer is an attribute grammar in which all attributes are trees; it is preceded by a look-ahead phase in which all attributes have finitely many values. The main result is that these formalisms are equivalent, i.e., that the attributed tree transducer with look-ahead is an appropriate implementation model for the tree transductions that are specifiable in mso logic. This result holds for mso graph transducers that produce trees with shared subtrees. If no sharing is allowed, the attributed tree transducer satisfies the single use restriction.},
	number = {1},
	urldate = {2019-06-11},
	journal = {Journal of Computer and System Sciences},
	author = {Bloem, Roderick and Engelfriet, Joost},
	month = aug,
	year = {2000},
	pages = {1--50},
	file = {ScienceDirect Full Text PDF:/Users/bojan/Zotero/storage/L2NTUYW6/Bloem and Engelfriet - 2000 - A Comparison of Tree Transductions Defined by Mona.pdf:application/pdf;ScienceDirect Snapshot:/Users/bojan/Zotero/storage/6YWIDSVG/S0022000099916847.html:text/html}
}

@article{simon_factorization_1990,
	title = {Factorization forests of finite height},
	volume = {72},
	number = {1},
	journal = {Theoretical Computer Science},
	author = {Simon, Imre},
	year = {1990},
	pages = {65--94},
	file = {Snapshot:/Users/bojan/Zotero/storage/YMY6FMCS/030439759090047L.html:text/html}
}

@misc{hodges_model_1993,
	title = {Model {Theory} by {Wilfrid} {Hodges}},
	url = {/core/books/model-theory/BB219FC37218A7CADE5906625E6B4BC1},
	abstract = {Cambridge Core - Logic, Categories and Sets - Model Theory -  by Wilfrid Hodges},
	language = {en},
	urldate = {2019-03-25},
	journal = {Cambridge Core},
	author = {Hodges, Wilfrid},
	month = mar,
	year = {1993},
	doi = {10.1017/CBO9780511551574},
	file = {Hodges - 1993 - Model Theory by Wilfrid Hodges.pdf:/Users/bojan/Zotero/storage/9B4ZX5ZP/Hodges - 1993 - Model Theory by Wilfrid Hodges.pdf:application/pdf}
}


@book{courcelle_graph_2012,
	series = {Encyclopedia of mathematics and its applications},
	title = {Graph {Structure} and {Monadic} {Second}-{Order} {Logic} - {A} {Language}-{Theoretic} {Approach}},
	volume = {138},
	isbn = {978-0-521-89833-1},
	url = {http://www.cambridge.org/fr/knowledge/isbn/item5758776/?site_locale=fr_FR},
	urldate = {2019-04-18},
	publisher = {Cambridge University Press},
	author = {Courcelle, Bruno and Engelfriet, Joost},
	year = {2012},
	file = {Courcelle Engelfriet.pdf:/Users/bojan/Zotero/storage/SRSMIDDE/Courcelle Engelfriet.pdf:application/pdf}
}

@article{alur2017streaming,
  title={Streaming tree transducers},
  author={Alur, Rajeev and D'antoni, Loris},
  journal={Journal of the ACM (JACM)},
  volume={64},
  number={5},
  pages={31},
  year={2017},
  publisher={ACM}
}

@article{schlingloff1992expressive,
  title={Expressive completeness of temporal logic of trees},
  author={Schlingloff, Bernd-Holger},
  journal={Journal of Applied Non-Classical Logics},
  volume={2},
  number={2},
  pages={157--180},
  year={1992},
  publisher={Taylor \& Francis}
}

@incollection{thomas1997languages,
  title={Languages, automata, and logic},
  author={Thomas, Wolfgang},
  booktitle={Handbook of formal languages},
  pages={389--455},
  year={1997},
  publisher={Springer}
}

@inproceedings{bojanczyk2008common,
  title={The common fragment of ACTL and LTL},
  author={Boja{\'n}czyk, Miko{\l}aj},
  booktitle={International Conference on Foundations of Software Science and Computational Structures},
  pages={172--185},
  year={2008},
  organization={Springer}
}
